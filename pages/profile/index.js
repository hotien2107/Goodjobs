import { collection, doc, getDocs, updateDoc } from "@firebase/firestore";
import { getDownloadURL, ref, uploadBytes } from "@firebase/storage";
import Head from "next/head";
import React, { useEffect, useState } from "react";
import { FaUpload } from "react-icons/fa";
import Header from "../../components/layout/Header";
import { db, storage } from "../../config/firebase";
import { useAuth } from "../../context/auth-context";

const Profile = () => {
  const { authUser } = useAuth();

  const [imageUrl, setImageUrl] = useState(null);
  const [docId, setDocId] = useState("");
  const [fullNameInput, setFullNameInput] = useState("");
  const [phoneInput, setPhoneInput] = useState("");
  const [userRole, setUserRole] = useState("");
  const [userEmail, setUserEmail] = useState("");
  const [dobInput, setDobInput] = useState(null);

  //get user info
  useEffect(() => {
    setFullNameInput(authUser?.fullName);
    setPhoneInput(authUser?.phoneNumber);
    setImageUrl(
      authUser?.avatar ??
        "https://techkalzen.com/wp-content/uploads/2020/03/anime-bleach-se-quay-ve-chuyen-the-arc-thousand-year-blood-war-905x613.jpg"
    );
    setUserRole(authUser?.role === 1 ? "Ứng viên" : authUser?.role === 2 ? "HR" : "");
    setUserEmail(authUser?.email);
    setDobInput(authUser?.DOB);
  }, [authUser]);

  //get list user
  useEffect(() => {
    const getUser = async () => {
      const querySnapshot = await getDocs(collection(db, "users"));
      querySnapshot.forEach((doc) => {
        const data = doc.data();

        if (data.id === authUser?.id) {
          setDocId(doc.id);
        }
      });
    };

    getUser();
  }, [authUser]);

  const ChangeImage = async (e) => {
    if (e.target.files[0]) {
      const image = e.target.files[0];

      const storageRef = ref(storage);

      const imagesRef = ref(storageRef, "images");

      const uploadRef = ref(imagesRef, image.name);

      await uploadBytes(uploadRef, image).then((snapshot) => {
        console.log("upload image success");
      });
      await getDownloadURL(uploadRef).then((url) => {
        setImageUrl(url);
      });
    }
  };

  const UpdateProfile = async (e) => {
    e.preventDefault();
    if (docId) {
      const docRef = doc(db, "users", docId);
      const UpdateProfile = await updateDoc(docRef, {
        fullName: fullNameInput,
        phoneNumber: phoneInput,
        avatar: imageUrl,
        DOB: dobInput,
      }).then(() => {
        console.log("success");
      });
    }
  };

  const ResetProfile = () => {
    setFullNameInput(authUser?.fullName);
    setPhoneInput(authUser?.phoneNumber);
    setImageUrl(authUser?.avatar);
    setDobInput(authUser?.DOB);
  };

  return (
    <>
      <Head>
        <title>Goodjobs-Profile</title>
        <meta name='description' content='Generated by create next app' />
        <link rel='icon' href='/favicon.ico' />
      </Head>

      <main className='min-h-screen flex flex-col bg-gray-100'>
        <Header />

        <div className='w-full h-4/5 flex justify-center mb-6 mt-6'>
          <div className='w-4/5 max-w-screen-xl'>
            <div className='w-full h-full p-4 bg-white rounded-2xl shadow-2xl'>
              <h3 className='text-2xl font-bold mb-6'>Thông tin cá nhân</h3>
              <form onSubmit={UpdateProfile}>
                <div className='flex'>
                  {/* basic info - start */}
                  <div className='basis-1/2 flex'>
                    <div className='mr-4'>
                      <ul className=''>
                        <li className='text-xl font-medium mb-4'>Họ và tên:</li>
                        <li className='text-xl font-medium mb-4'>Email:</li>
                        <li className='text-xl font-medium mb-4'>Ngày sinh:</li>
                        <li className='text-xl font-medium mb-4'>Số điện thoại:</li>
                        <li className='text-xl font-medium mb-4'>Vai trò:</li>
                      </ul>
                    </div>
                    <div className='basis-1/2'>
                      <input
                        className='text-xl text-gray-800 mb-4'
                        autoComplete='nope'
                        type='text'
                        value={fullNameInput}
                        onChange={(e) => setFullNameInput(e.target.value)}
                        placeholder='Họ và tên'
                      />
                      <input className='text-xl text-gray-500 mb-4' type='text' value={userEmail} disabled />
                      <input
                        className='text-xl text-gray-800 mb-4'
                        type='date'
                        value={dobInput}
                        onChange={(e) => setDobInput(e.target.value)}
                      />
                      <input
                        className='text-xl text-gray-800 mb-4'
                        autoComplete='nope'
                        type='text'
                        value={phoneInput}
                        onChange={(e) => setPhoneInput(e.target.value)}
                        placeholder={authUser?.phoneNumber}
                      />
                      <input className='text-xl text-gray-500 mb-4' type='text' value={userRole} disabled />
                    </div>
                  </div>
                  {/* basic info - end */}

                  {/* avatar - start */}
                  <div className='basis-1/2 flex flex-col items-center justify-center'>
                    <div className='w-40 h-52 bg-slate-100 rounded-xl mb-4 overflow-hidden'>
                      <img src={imageUrl} className='object-cover w-full h-full' />
                    </div>
                    <input type='file' id='user-avatar' onChange={ChangeImage} className='hidden' />
                    <label htmlFor='user-avatar'>
                      <FaUpload className='cursor-pointer text-xl' href='#' />
                    </label>
                  </div>
                  {/* avatar - end */}
                </div>
                {/* button group - start */}
                <div className='flex'>
                  <button
                    type='submit'
                    className='px-4 py-2 bg-green-600 rounded-xl text-white font-bold text-xl mr-4 hover:bg-green-700'
                  >
                    Lưu
                  </button>
                  <button
                    type='reset'
                    className='px-4 py-2 bg-yellow-600 rounded-xl text-white font-bold text-xl hover:bg-yellow-700'
                    onClick={ResetProfile}
                  >
                    Hoàn tác
                  </button>
                </div>
                {/* button group - end */}
              </form>
            </div>
          </div>
        </div>
      </main>
    </>
  );
};

export default Profile;
